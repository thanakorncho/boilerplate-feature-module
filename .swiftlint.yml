# By default, SwiftLint uses a set of sensible default rules you can adjust:
disabled_rules: # rule identifiers turned on by default to exclude from running
  - colon
  - comma
  - control_statement
opt_in_rules: # some rules are turned off by default, so you need to opt-in
  # Kind: Lint
  - anyobject_protocol
  - class_delegate_protocol
  - duplicate_enum_cases
  - ibinspectable_in_extension
  - overridden_super_call
  - raw_value_for_camel_cased_codable_enum
  - unused_import
  # - unowned_variable_capture
  - unused_declaration
  - yoda_condition

  # Kind: Style
  - closing_brace
  - closure_spacing
  - closure_end_indentation
  - colon
  - collection_alignment
  - computed_accessors_order
  - control_statement
  # - file_types_order
  - literal_expression_end_indentation
  # - multiline_arguments_brackets
  # - multiline_function_chains
  # - multiline_literal_brackets
  - multiline_parameters
  - sorted_imports
  # - type_contents_order
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_between_cases
  - vertical_whitespace_closing_braces
  # - number_separator
  - operator_usage_whitespace
  - optional_enum_case_matching

  # Kind: Idiomatic
  - duplicate_imports
  - discouraged_object_literal
  - fatal_error_message
  - file_name_no_space
  # - force_unwrapping
  # - function_default_parameter_at_end
  # - implicitly_unwrapped_optional
  - joined_default_parameter
  # - legacy_random
  - prefer_zero_over_explicit_init
  # - static_operator

  # Kind: Performance
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison
  - empty_collection_literal
  - empty_count
  - empty_string
  - first_where
  - flatmap_over_map_reduce
  - last_where
  - reduce_boolean
  - reduce_into
  - sorted_first_last

  # Kind: Metrics
  # - enum_case_associated_values_count


# Alternatively, specify all rules explicitly by uncommenting this option:
# only_rules: # delete `disabled_rules` & `opt_in_rules` if using this
#   - empty_parameters
#   - vertical_whitespace

included: # paths to include during linting. `--path` is ignored if present.
  - Feature
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Example
  - Feature/Classes/Extensions/SwifterSwift
  # - Source/ExcludedFile.swift
  # - Source/*/ExcludedFile.swift # Exclude files with a wildcard
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 110
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names
identifier_name:
  min_length: # only min_length
    error: 3 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
nesting:
  type_level: 3
  function_level: 2
cyclomatic_complexity:
  warning: 20
  error: 30
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, codeclimate, junit, html, emoji, sonarqube, markdown, github-actions-logging)
